{"version":3,"file":"index-DNFWNybb.js","sources":["../../src/pages/Contact/index.js"],"sourcesContent":["import { Navigation } from '../../components/Navigation.js';\n\nexport default class ContactPage {\n    constructor() {\n        this.container = document.getElementById('app');\n    }\n    \n    render() {\n        this.container.innerHTML = '';\n        \n        const nav = new Navigation();\n        this.container.appendChild(nav.render());\n        \n        this.loadRecaptchaScript();\n        \n        const pageContent = document.createElement('div');\n        pageContent.className = 'page-container';\n        pageContent.innerHTML = `\n            <section class=\"contact-hero\">\n                <div class=\"container\">\n                    <h1 class=\"fade-in\">Get in Touch</h1>\n                </div>\n            </section>\n            \n            <section class=\"contact-content\">\n                <div class=\"container\">\n                    <div class=\"contact-grid\">\n                        <div class=\"contact-info\">\n                            <h2>Contact Information</h2>\n                            \n                            <div class=\"contact-item\">\n                                <h3>General Inquiries</h3>\n                                <p><a href=\"mailto:hello@isperai.com\">hello@isperai.com</a></p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"contact-form-wrapper\">\n                            <h2>Send us a message</h2>\n                            <form class=\"contact-form\">\n                                <div class=\"form-group\">\n                                    <label for=\"name\">Name</label>\n                                    <input type=\"text\" id=\"name\" name=\"name\" required>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label for=\"email\">Email</label>\n                                    <input type=\"email\" id=\"email\" name=\"email\" required>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label for=\"subject\">Subject</label>\n                                    <select id=\"subject\" name=\"subject\" required>\n                                        <option value=\"\">Select a topic</option>\n                                        <option value=\"general\">General Inquiry</option>\n                                        <option value=\"partnership\">Partnership</option>\n                                    </select>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label for=\"message\">Message</label>\n                                    <textarea id=\"message\" name=\"message\" rows=\"5\" required></textarea>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <div class=\"g-recaptcha\" data-sitekey=\"YOUR_RECAPTCHA_SITE_KEY\" data-theme=\"dark\"></div>\n                                </div>\n                                \n                                <button type=\"submit\" class=\"btn btn-primary\">Send Message</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            \n         \n        `;\n        \n        this.container.appendChild(pageContent);\n        this.addStyles();\n        this.setupForm();\n    }\n    \n    setupForm() {\n        const form = this.container.querySelector('.contact-form');\n        const submitButton = form.querySelector('button[type=\"submit\"]');\n        const emailInput = form.querySelector('#email');\n        \n        form.setAttribute('novalidate', 'true');\n        \n        let emailTimeout;\n        emailInput.addEventListener('input', (e) => {\n            const email = e.target.value;\n            \n            clearTimeout(emailTimeout);\n            \n            const existingTooltip = e.target.parentNode.querySelector('.validation-tooltip');\n            if (existingTooltip) {\n                existingTooltip.remove();\n            }\n            \n            if (email) {\n                emailTimeout = setTimeout(() => {\n                    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n                    if (!emailRegex.test(email)) {\n                        this.showFieldError(e.target, 'Please enter a valid email address');\n                    }\n                }, 500);\n            }\n        });\n        \n        form.querySelectorAll('input[required], select[required], textarea[required]').forEach(field => {\n            field.addEventListener('blur', (e) => {\n                this.validateField(e.target);\n            });\n        });\n        \n        form.addEventListener('submit', async (e) => {\n            e.preventDefault();\n            \n            let isValid = true;\n            form.querySelectorAll('input[required], select[required], textarea[required]').forEach(field => {\n                if (!this.validateField(field)) {\n                    isValid = false;\n                }\n            });\n            \n            if (!isValid) {\n                return;\n            }\n            \n            submitButton.disabled = true;\n            submitButton.textContent = 'Sending...';\n            \n            const formData = new FormData(form);\n            const data = Object.fromEntries(formData);\n            \n            const recaptchaResponse = grecaptcha.getResponse();\n            \n            if (!recaptchaResponse) {\n                this.showMessage('Please complete the reCAPTCHA verification.', 'error');\n                submitButton.disabled = false;\n                submitButton.textContent = 'Send Message';\n                return;\n            }\n            \n            data['g-recaptcha-response'] = recaptchaResponse;\n            \n            try {\n                const response = await fetch('https://formspree.io/f/xyzjqvra', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(data)\n                });\n                \n                if (response.ok) {\n                    this.showMessage('Thank you for your message. We\\'ll get back to you soon!', 'success');\n                    form.reset();\n                    if (typeof grecaptcha !== 'undefined') {\n                        grecaptcha.reset();\n                    }\n                } else {\n                    throw new Error('Failed to send message');\n                }\n            } catch (error) {\n                console.error('Error sending form:', error);\n                this.showMessage('Sorry, there was an error sending your message. Please try again later.', 'error');\n            } finally {\n                submitButton.disabled = false;\n                submitButton.textContent = 'Send Message';\n            }\n        });\n    }\n    \n    validateField(field) {\n        const existingTooltip = field.parentNode.querySelector('.validation-tooltip');\n        if (existingTooltip) {\n            existingTooltip.remove();\n        }\n        \n        if (field.hasAttribute('required') && !field.value.trim()) {\n            this.showFieldError(field, 'This field is required');\n            return false;\n        }\n        \n        if (field.type === 'email') {\n            const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n            if (!emailRegex.test(field.value)) {\n                this.showFieldError(field, 'Please enter a valid email address');\n                return false;\n            }\n        }\n        \n        if (field.tagName === 'SELECT' && field.value === '') {\n            this.showFieldError(field, 'Please select an option');\n            return false;\n        }\n        \n        return true;\n    }\n    \n    showFieldError(field, message) {\n        const existingTooltip = field.parentNode.querySelector('.validation-tooltip');\n        if (existingTooltip) {\n            existingTooltip.remove();\n        }\n        \n        const tooltip = document.createElement('div');\n        tooltip.className = 'validation-tooltip';\n        tooltip.textContent = message;\n        \n        field.parentNode.appendChild(tooltip);\n        \n        setTimeout(() => {\n            tooltip.classList.add('show');\n        }, 10);\n    }\n    \n    showMessage(text, type) {\n        const existingMessage = this.container.querySelector('.form-message');\n        if (existingMessage) {\n            existingMessage.remove();\n        }\n        \n        const message = document.createElement('div');\n        message.className = `form-message form-message-${type}`;\n        message.textContent = text;\n        \n        const form = this.container.querySelector('.contact-form');\n        form.parentNode.insertBefore(message, form.nextSibling);\n        \n        setTimeout(() => {\n            message.remove();\n        }, 5000);\n    }\n    \n    addStyles() {\n        const style = document.createElement('style');\n        style.textContent = `\n            .contact-hero {\n                padding: var(--spacing-xl) 0;\n                text-align: center;\n            }\n            \n            .contact-content {\n                padding: var(--spacing-xl) 0;\n            }\n            \n            .contact-grid {\n                display: grid;\n                grid-template-columns: 1fr 2fr;\n                gap: var(--spacing-xl);\n            }\n            \n            .contact-item {\n                margin-bottom: var(--spacing-md);\n            }\n            \n            .contact-item h3 {\n                font-size: 1rem;\n                margin-bottom: var(--spacing-xs);\n            }\n            \n            .contact-item a {\n                color: var(--accent-blue);\n                text-decoration: none;\n                transition: opacity var(--transition-fast);\n            }\n            \n            .contact-item a:hover {\n                opacity: 0.8;\n            }\n            \n            .social-links {\n                display: flex;\n                gap: var(--spacing-md);\n                margin-top: var(--spacing-lg);\n            }\n            \n            .social-link {\n                color: var(--text-gray);\n                text-decoration: none;\n                transition: color var(--transition-fast);\n            }\n            \n            .social-link:hover {\n                color: var(--primary-white);\n            }\n            \n            .contact-form {\n                display: flex;\n                flex-direction: column;\n                gap: var(--spacing-md);\n            }\n            \n            .form-group {\n                display: flex;\n                flex-direction: column;\n                gap: var(--spacing-xs);\n                position: relative;\n            }\n            \n            .form-group label {\n                font-size: 0.875rem;\n                color: var(--text-gray);\n                font-weight: 500;\n            }\n            \n            .form-group input,\n            .form-group select,\n            .form-group textarea {\n                padding: 12px 16px;\n                background: rgba(255, 255, 255, 0.05);\n                border: 1px solid var(--border-gray);\n                border-radius: 6px;\n                color: var(--primary-white);\n                font-size: 1rem;\n                font-family: inherit;\n                transition: all var(--transition-fast);\n            }\n            \n            .form-group input:focus,\n            .form-group select:focus,\n            .form-group textarea:focus {\n                outline: none;\n                border-color: var(--primary-white);\n                background: rgba(255, 255, 255, 0.08);\n            }\n            \n            .form-group textarea {\n                resize: vertical;\n                min-height: 120px;\n            }\n            \n            .office-section {\n                padding: var(--spacing-xl) 0;\n                background: rgba(255, 255, 255, 0.02);\n                border-top: 1px solid var(--border-gray);\n            }\n            \n            .office-card {\n                text-align: center;\n                padding: var(--spacing-lg);\n                background: rgba(255, 255, 255, 0.02);\n                border: 1px solid var(--border-gray);\n                border-radius: 12px;\n            }\n            \n            .form-message {\n                margin-top: var(--spacing-md);\n                padding: var(--spacing-md) var(--spacing-lg);\n                border-radius: 8px;\n                font-size: 0.9rem;\n                animation: fadeIn 0.3s ease;\n                backdrop-filter: blur(10px);\n            }\n            \n            .form-message-success {\n                background: rgba(255, 255, 255, 0.05);\n                color: rgba(255, 255, 255, 0.9);\n                border: 1px solid rgba(255, 255, 255, 0.1);\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n            }\n            \n            .form-message-error {\n                background: rgba(255, 255, 255, 0.05);\n                color: rgba(255, 255, 255, 0.9);\n                border: 1px solid rgba(255, 255, 255, 0.1);\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n            }\n            \n            .g-recaptcha {\n                transform: scale(0.9);\n                transform-origin: 0 0;\n            }\n            \n            /* Custom validation tooltip */\n            .validation-tooltip {\n                position: absolute;\n                bottom: -35px;\n                left: 0;\n                background: rgba(30, 30, 30, 0.95);\n                color: rgba(255, 255, 255, 0.9);\n                padding: 8px 12px;\n                border-radius: 6px;\n                font-size: 0.875rem;\n                border: 1px solid rgba(255, 255, 255, 0.1);\n                backdrop-filter: blur(10px);\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);\n                opacity: 0;\n                transform: translateY(-5px);\n                transition: all 0.2s ease;\n                pointer-events: none;\n                white-space: nowrap;\n                z-index: 1000;\n            }\n            \n            .validation-tooltip::before {\n                content: '';\n                position: absolute;\n                top: -6px;\n                left: 16px;\n                width: 12px;\n                height: 12px;\n                background: rgba(30, 30, 30, 0.95);\n                border-left: 1px solid rgba(255, 255, 255, 0.1);\n                border-top: 1px solid rgba(255, 255, 255, 0.1);\n                transform: rotate(45deg);\n            }\n            \n            .validation-tooltip.show {\n                opacity: 1;\n                transform: translateY(0);\n            }\n            \n            /* Error state for inputs */\n            .form-group input.error,\n            .form-group select.error,\n            .form-group textarea.error {\n                border-color: rgba(255, 255, 255, 0.3);\n            }\n            \n            @keyframes fadeIn {\n                from {\n                    opacity: 0;\n                    transform: translateY(-10px);\n                }\n                to {\n                    opacity: 1;\n                    transform: translateY(0);\n                }\n            }\n            \n            @media (max-width: 768px) {\n                .contact-grid {\n                    grid-template-columns: 1fr;\n                    gap: var(--spacing-lg);\n                }\n            }\n        `;\n        document.head.appendChild(style);\n    }\n    \n    loadRecaptchaScript() {\n        if (document.querySelector('script[src*=\"recaptcha/api.js\"]')) {\n            return;\n        }\n        \n        const script = document.createElement('script');\n        script.src = 'https://www.google.com/recaptcha/api.js';\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n    }\n    \n    destroy() {\n    }\n}"],"names":["ContactPage","nav","Navigation","pageContent","form","submitButton","emailInput","emailTimeout","e","email","existingTooltip","field","isValid","formData","data","recaptchaResponse","error","message","tooltip","text","type","existingMessage","style","script"],"mappings":"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"}